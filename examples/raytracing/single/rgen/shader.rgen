#version 460
#extension GL_EXT_ray_tracing : require

layout(set = 1, binding = 0, std140) uniform RayProperties
{
    uint flags;
    uint cullMask;
    vec3 origin;
    vec3 direction;
    float tMin;
    float tMax;
} ray;

layout(set = 0, binding = 0) uniform accelerationStructureEXT as;
layout(location = 0) rayPayloadEXT uvec4 payload;

layout(set = 3, binding = 2, std430) buffer OutData
{
    float hitT;
    // ids: geometry index and primitive index
    uvec2 ids;
    // Possible values include:
    // - HitKindFrontFacingTriangleKHR = 0xFEU
    // - HitKindBackFacingTriangleKHR Â = 0xFFU
    // - HitKindLssPrimitiveNV
    // - HitKindSpherePrimitiveNV
    uint hitKind;
} out_buf;

void main()
{
    traceRayEXT(as, ray.flags, ray.cullMask, 0u, 0u, 0u, ray.origin, ray.tMin, ray.direction, ray.tMax, 0);

    // For testing purposes, the interpreter has non-standard behavior for single rgen shaders without any connected
    // SBT. We convert from the "payload" fields into the output:
    out_buf.hitT = uintBitsToFloat(payload.x);
    out_buf.ids = payload.yz;
    out_buf.hitKind = payload.w;
}
