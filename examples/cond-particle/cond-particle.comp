#version 450
layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

struct Particle {
    float position;
    float velocity;
};

layout(std140, binding = 1) buffer ParticleIO {
    Particle particles[];
};

void main() {
    const float location_bound = 100;
    float result = particles[gl_GlobalInvocationID.x].position
                 + particles[gl_GlobalInvocationID.x].velocity;
    particles[gl_GlobalInvocationID.x].position = result;
    float diff = location_bound - result;

    // If the particle has gone out of bounds, then bounce location and velocity
    bool neg_location = result.x < 0;
    if (neg_location || diff.x < 0) {
        particles[gl_GlobalInvocationID.x].velocity.x *= -1;

        if (neg_location)
            particles[gl_GlobalInvocationID.x].position.x *= -1;
        else
            particles[gl_GlobalInvocationID.x].position.x = location_bound + diff.x;
    }
}
