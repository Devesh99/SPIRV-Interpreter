; SPIR-V
; Version: 1.6
; Generator: Khronos SPIR-V Tools Assembler; 0
; Bound: 45
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %control %color %index
               OpExecutionMode %main OriginUpperLeft
          %6 = OpString "inline"
               OpSource ESSL 310 %6 "#version 310 es
precision mediump float;
precision highp int;

layout(location = 0) flat in int control;
layout(location = 1) out highp vec4 color;
layout(location = 2) out int index;

void Transform(inout highp vec4 copied, float other) {
    copied = vec4(other);
}

int Select(int index) {
    if (control != 0)
        return -1;
    return index;
}

void main() {
    highp vec4 orig = vec4(0.0);
    Transform(orig, 1.2);
    color = orig;
    index = Select(6);
}"
               OpName %main "main"
               OpName %Transform "Transform"
               OpName %copied "copied"
               OpName %Select "Select"
               OpName %control "control"
               OpName %orig "orig"
               OpName %param "param"
               OpName %color "color"
               OpName %index "index"
               OpDecorate %control Flat
               OpDecorate %control Location 0
               OpDecorate %color Location 1
               OpDecorate %index Location 2
       %void = OpTypeVoid
         %13 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Function_v4float = OpTypePointer Function %v4float
         %17 = OpTypeFunction %void %_ptr_Function_v4float %float
        %int = OpTypeInt 32 1
         %19 = OpTypeFunction %int %int
%_ptr_Input_int = OpTypePointer Input %int
    %control = OpVariable %_ptr_Input_int Input
      %int_0 = OpConstant %int 0
       %bool = OpTypeBool
     %int_n1 = OpConstant %int -1
    %float_0 = OpConstant %float 0
         %25 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
%float_1_20000005 = OpConstant %float 1.20000005
%_ptr_Output_v4float = OpTypePointer Output %v4float
      %color = OpVariable %_ptr_Output_v4float Output
%_ptr_Output_int = OpTypePointer Output %int
      %index = OpVariable %_ptr_Output_int Output
      %int_6 = OpConstant %int 6
       %main = OpFunction %void None %13
         %30 = OpLabel
       %orig = OpVariable %_ptr_Function_v4float Function
      %param = OpVariable %_ptr_Function_v4float Function
               OpStore %orig %25
         %31 = OpLoad %v4float %orig
               OpStore %param %31
         %32 = OpFunctionCall %void %Transform %param %float_1_20000005
         %33 = OpLoad %v4float %param
               OpStore %orig %33
         %34 = OpLoad %v4float %orig
               OpStore %color %34
         %35 = OpFunctionCall %int %Select %int_6
               OpStore %index %35
               OpReturn
               OpFunctionEnd
  %Transform = OpFunction %void None %17
     %copied = OpFunctionParameter %_ptr_Function_v4float
         %36 = OpFunctionParameter %float
         %37 = OpLabel
         %38 = OpCompositeConstruct %v4float %36 %36 %36 %36
               OpStore %copied %38  ; copied is an inout parameter which has its modified value used after call
               OpReturn
               OpFunctionEnd
     %Select = OpFunction %int None %19
         %39 = OpFunctionParameter %int
         %40 = OpLabel
         %41 = OpLoad %int %control
         %42 = OpINotEqual %bool %41 %int_0
               OpSelectionMerge %43 None
               OpBranchConditional %42 %44 %43
         %44 = OpLabel
               OpReturnValue %int_n1
         %43 = OpLabel
               OpReturnValue %39  ; Returning the param here. Must clone to avoid double deletion!
               OpFunctionEnd
